@using Behapy.Presentation.Constants
@using Behapy.Presentation.Extensions
@using Behapy.Presentation.Models
@model Behapy.Presentation.Models.Order

@{
  ViewData["Title"] = "Create";
  Layout = "~/Views/Shared/Admin/_Layout.cshtml";
}

<div class="main-content">
  <div class="page-header">
    <div class="header-sub-title">
      <nav class="breadcrumb breadcrumb-dash">
        <a href="#" class="breadcrumb-item"><i class="anticon anticon-home m-r-5"></i>Trang chủ</a>
        <a class="breadcrumb-item" asp-controller="Orders" asp-action="Admin">Đơn hàng</a>
        <span class="breadcrumb-item active">Tạo đơn hàng</span>
      </nav>
    </div>
  </div>
  <div class="card">
    <div class="card-body">
      <form asp-action="Create">
        <div style="display: none">
          <input asp-for="CurrentStatus" class="form-control" value="@OrderStatusConstant.NeedToConfirm"/>
        </div>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
          <div class="radio">
            <input id="IsCustomer" name="IsCustomer" type="radio" value="true" checked>
            <label for="IsCustomer">Khách hàng</label>
          </div>
          <div class="radio">
            <input id="IsDistributor" name="IsCustomer" type="radio" value="false">
            <label for="IsDistributor">Đối tác</label>
          </div>
        </div>
        <div class="form-group customer">
          <label asp-for="CustomerId" class="control-label"></label>
          <div class="input-group">
            <select asp-for="CustomerId" class="select2 flex-grow-1" onchange="onSelectCustomer()">
              @foreach (var customer in (ViewData["CustomerId"] as IEnumerable<dynamic>)!)
              {
                <option value="@customer.Id">@customer.Name (@customer.User.PhoneNumber)</option>
              }
            </select>
          @*   <div class="input-group-append">
              <a asp-controller="Customers" asp-action="Create" class="btn btn-primary ml-3">Thêm khách hàng</a>
            </div> *@
          </div>
        </div>
        <div class="form-group distributor" style="display: none">
          <label asp-for="DistributorId" class="control-label"></label>
          <div class="input-group">
            <select asp-for="DistributorId" class="select2 flex-grow-1" onchange="onSelectDistributor()">
              @foreach (var distributor in (ViewData["DistributorId"] as IEnumerable<dynamic>)!)
              {
                <option value="@distributor.Id">@distributor.FullName (@distributor.Phone)</option>
              }
            </select>
            <div class="input-group-append">
              <a asp-controller="Distributors" asp-action="Create" class="btn btn-primary ml-3">Thêm nhà phân phối</a>
            </div>
          </div>
        </div>
        <div class="form-group">
          <label asp-for="Address" class="control-label"></label>
          <input asp-for="Address" class="form-control" readonly/>
          <span asp-validation-for="Address" class="text-danger"></span>
        </div>
        <div class="form-group">
          <label asp-for="Note" class="control-label"></label>
          <input asp-for="Note" class="form-control"/>
          <span asp-validation-for="Note" class="text-danger"></span>
        </div>
        <div class="form-group">
          <label asp-for="PaymentTypeId" class="control-label"></label>
          <select asp-for="PaymentTypeId" class="form-control" asp-items="ViewBag.PaymentTypeId"></select>
        </div>
@*         <div class="form-group">
          <label asp-for="PromotionId" class="control-label"></label>
          <select asp-for="PromotionId" class="form-control" asp-items="ViewBag.PromotionId"></select>
        </div> *@
        <div class="table-responsive">
          <table class="table table-bordered">
            <thead>
              <tr>
                <th scope="col">STT</th>
                <th scope="col">Sản phẩm</th>
                <th scope="col">Giá</th>
                <th scope="col">Số lượng</th>
                <th scope="col">Tạm tính</th>
                <th scope="col">Chiết khấu</th>
                <th scope="col">Thành tiền</th>
              </tr>
            </thead>
            <tbody id="table-data"></tbody>
            <tfoot>
              <tr>
                <th scope="row" colspan="7">
                  <button type="button" class="btn btn-success" onclick="addProduct()">Thêm sản phẩm</button>
                </th>
              </tr>
              <tr>
                <th scope="row" colspan="6">Tổng tiền hóa đơn</th>
                <td class="total">@(0m.ToMoney())</td>
              </tr>
            </tfoot>
          </table>
        </div>
        <div class="form-group">
          <input type="submit" value="Tạo hóa đơn" class="btn btn-primary"/>
        </div>
      </form>
    </div>
  </div>
</div>

@section OverridenStyles {
  <link href="~/js/admin/vendors/select2/select2.css" rel="stylesheet">
}

@section Scripts {
  <script src="~/js/admin/vendors/select2/select2.min.js"></script>
  <script src="https://unpkg.com/imask"></script>
  <script>
    const numberPipe = IMask.createPipe({
        mask: Number,
        scale: 2,
        thousandsSeparator: ',',
        radix: '.',
    });
    
    const distributors = @Html.Raw(Json.Serialize(ViewData["DistributorId"]));
    const distributorSelect = $('#DistributorId');
    let selectedDistributor = null;

    $(':radio[name="IsCustomer"]').change(function() {
      const isCustomer = $(this).filter(':checked').val();
      if (isCustomer === 'true') {
        $('.customer').show();
        $('.distributor').hide();
      } else {
        $('.customer').hide();
        $('.distributor').show();
      }
    });
    
    $('#CustomerId').select2();
    distributorSelect.select2();
    
    function updateIndex() {
      $('#table-data tr').each2(function (i) {
        $(this).find('th').html(i+1);
        $(this).find('.product').attr('name', `Products[${i}].Id`);
        $(this).find('.amount').attr('name', `Products[${i}].Amount`);
      });
    }
    
    function onSelectProduct(select, skipUpdateTotal = false) {
      const amountInput = $(select).closest('tr').find('.amount'); 

      updatePrice(select);
      updateMoney(amountInput, skipUpdateTotal);
    }
    
    function updatePrice(select) {
      const tr = $(select).closest('tr');
      const tdPrice = tr.find('.price');
      let price = $(select.options[select.selectedIndex]).attr('data-price');
      price = isNaN(price) ? 0 : +price;
      tdPrice.attr('data-price', price);
      tdPrice.html(numberPipe(price.toString()))
    }
    
    function updateMoney(input, skipUpdateTotal) {
      const tr = $(input).closest('tr');
      let price = tr.find('.price').attr('data-price');
      price = isNaN(price) ? 0 : +price;

      const trMoney = tr.find('.money');
      const money = $(input).val() * price;
      trMoney.html(numberPipe(money.toString()));
      $(trMoney).attr('data-money', money);

      updateDiscountForDistributor(input);
      updateSubtotal(input);
      
      if (!skipUpdateTotal) {
        updateTotalMoney();
      }
    }
    
    function updateDiscountForDistributor(input) {
      const tr = $(input).closest('tr');
      const tdDiscountForDistributor = tr.find('.discount-for-distributor');
      const money = $(input).val() * (selectedDistributor?.distributorLevel?.importReduction ?? 0);
      tdDiscountForDistributor.html(numberPipe(money.toString()));
      $(tdDiscountForDistributor).attr('data-discount', money);
    }
    
    function updateSubtotal(input) {
      const tr = $(input).closest('tr');
      const money = +tr.find('.money').attr('data-money');
      const discount = +tr.find('.discount-for-distributor').attr('data-discount');
      const subtotal = money - discount;
      const tdSubtotal = tr.find('.sub-total');
      tdSubtotal.html(numberPipe(subtotal.toString()));
      $(tdSubtotal).attr('data-sub-total', subtotal);
    }
    
    function updateTotalMoney() {
      let total = 0;
      
      $('#table-data .sub-total').each2(function (_, obj) {
        const value = $(obj).attr('data-sub-total');
        console.log(value);
        total += isNaN(value) ? 0 : +value; 
      });
      $('tfoot .total').html(numberPipe(total.toString()));
    }
    
    function removeProduct(removeBtn) {
      $(removeBtn).closest('tr').remove();
      
      updateIndex();
      updateTotalMoney();
    }

    function addProduct() {
      const tr = $('<tr></tr>');
      const tdId = $(`<th scope="row"></th>`);
      const tdProduct = `
        <td>
          <select class="select2 product" onchange="onSelectProduct(this)">
            @foreach (var product in (ViewData["Products"] as List<Product>)!)
            {
              <option value='@product.Id' data-price='@product.Price'>@product.Name</option>
            } 
          </select>
        </td>`
      ;
      const tdPrice = `<td class='price' data-price='1000'></td>`;
      const tdAmount = `
        <td>
          <input class='amount' type='number' value="0" min="0" onchange="updateMoney(this)">
          <button class="btn btn-icon btn-danger" onclick="removeProduct(this)">
            <i class="anticon anticon-delete"></i>
          </button>
        </td>
      `;
      const tdMoney = `<td class='money'></td>`;
      const tdDiscountForDistributor = `<td class='discount-for-distributor'></td>`;
      const tdSubTotal = `<td class='sub-total'></td>`;

      tr.append(tdId)
          .append(tdProduct)
          .append(tdPrice)
          .append(tdAmount)
          .append(tdMoney)
          .append(tdDiscountForDistributor)
          .append(tdSubTotal);

      $('#table-data').append(tr);
      
      updateIndex();
      
      tr.children('.select2').select2();
    }
    
    function onSelectDistributor() {
      const distributorId = +distributorSelect.val();
      selectedDistributor = distributors.find(d => d.id === distributorId);

      updateAddress(selectedDistributor?.address);
      recalculateTable();
    }

    function onSelectCustomer() {
      selectedDistributor = null;
      recalculateTable();
    }
    
    function recalculateTable() {
      $('#table-data .product').each2(function (_, obj) {
        console.log(obj);
        onSelectProduct(obj[0], true);
      });
      updateTotalMoney();
    }
    
    function updateAddress(address) {
      $('#Address').val(address);
    }
  </script>
}