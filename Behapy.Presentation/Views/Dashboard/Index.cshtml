@using Behapy.Presentation.Extensions
@model IEnumerable<Behapy.Presentation.Models.CartItem>

@{
  ViewData["Title"] = "Dashboard";
  Layout = "~/Views/Shared/Admin/_Layout.cshtml";
  var currentYear = DateTime.Now.Year;
}

<div class="main-content">
  <div class="row">
    <div class="col-md-6 col-lg-3">
      <div class="card">
        <div class="card-body">
          <div class="media align-items-center">
            <div class="avatar avatar-icon avatar-lg avatar-blue">
              <i class="anticon anticon-dollar"></i>
            </div>
            <div class="m-l-15">
              <h2 class="m-b-0">@((ViewData["Revenue"] as decimal? ?? 0).ToMoney())</h2>
              <p class="m-b-0 text-muted">Doanh thu</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-6 col-lg-3">
      <div class="card">
        <div class="card-body">
          <div class="media align-items-center">
            <div class="avatar avatar-icon avatar-lg avatar-gold">
              <i class="anticon anticon-profile"></i>
            </div>
            <div class="m-l-15">
              <h2 class="m-b-0">@ViewData["OrdersCount"]</h2>
              <p class="m-b-0 text-muted">Đơn hàng</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-6 col-lg-3">
      <div class="card">
        <div class="card-body">
          <div class="media align-items-center">
            <div class="avatar avatar-icon avatar-lg avatar-purple">
              <i class="anticon anticon-user"></i>
            </div>
            <div class="m-l-15">
              <h2 class="m-b-0">@ViewData["CustomersCount"]</h2>
              <p class="m-b-0 text-muted">Khách hàng</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-6 col-lg-3">
      <div class="card">
        <div class="card-body">
          <div class="media align-items-center">
            <div class="avatar avatar-icon avatar-lg avatar-purple">
              <i class="anticon anticon-user"></i>
            </div>
            <div class="m-l-15">
              <h2 class="m-b-0">@ViewData["DistributorsCount"]</h2>
              <p class="m-b-0 text-muted">Đối tác</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-md-12">
      <div class="card">
        <div class="card-body">
          <div
            class="d-flex justify-content-between align-items-center">
            <h5>Tổng doanh thu</h5>
            <div>
              <div class="btn-group">
                <div class="dropdown">
                  <button class="btn btn-default active dropdown-toggle" data-toggle="dropdown">
                    <span>Năm @ViewData["Year"]</span>
                  </button>
                  <div class="dropdown-menu">
                    @for (var i = ViewData["MinYear"] as int? ?? 0; i <= currentYear; i++)
                    {
                      var year = i;
                      <a asp-action="Index" asp-route-year="@year" class="dropdown-item">@year</a>
                    }
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="m-t-50" style="height: 330px">
            <canvas class="chart" id="revenue-chart"></canvas>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-md-12 col-lg-4">
      <div class="card">
        <div class="card-body">
          <div
            class="d-flex justify-content-between align-items-center">
            <div>
              <h2 class="m-b-0">@(((ViewData["Revenue"] as decimal? ?? 0) / 12).ToMoney())</h2>
              <p class="m-b-0 text-muted">Trung bình doanh thu</p>
            </div>
          </div>
          <div class="m-t-50" style="height: 375px">
            <canvas class="chart" id="avg-profit-chart"></canvas>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-12 col-lg-8">
      <div class="card">
        <div class="card-body">
          <div
            class="d-flex justify-content-between align-items-center">
            <h5>Sản phẩm bán chạy nhất</h5>
            <div>
              <a
                href="javascript:void(0);"
                class="btn btn-sm btn-default">
                Xem tất cả
              </a
              >
            </div>
          </div>
          <div class="m-t-30">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>Sản phẩm</th>
                    <th>Số lượng đã bán</th>
                    <th>Tổng tiền</th>
                    <th style="max-width: 70px">Tồn kho</th>
                  </tr>
                </thead>
                <tbody>
                  @foreach (var item in (ViewData["BestSeller"] as IEnumerable<dynamic>)!)
                  {
                    <tr>
                      <td>
                        <div class="media align-items-center">
                          <div class="avatar avatar-image rounded">
                            <img src="@item.Product.ImageUrl" alt="@item.Product.Name"/>
                          </div>
                          <div class="m-l-10">
                            <span>@item.Product.Name</span>
                          </div>
                        </div>
                      </td>
                      <td>@item.Count</td>
                      <td>@((item.Sum is decimal ? (decimal)item.Sum : 0).ToMoney())</td>
                      <td>
                        <div class="d-flex align-items-center">
                          <div class="progress progress-sm w-100 m-b-0">
                            <div class="progress-bar bg-success" style="width: @(Math.Min(item.Product.Amount, 100))%">
                            </div>
                          </div>
                          <div class="m-l-10">@item.Product.Amount</div>
                        </div>
                      </td>
                    </tr>
                  }
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts {
  <script src="~/js/admin/vendors/chartjs/Chart.min.js"></script>

  <script>
    var themeColors;
    
    const revenueChartData = (@Html.Raw(Json.Serialize(ViewData["RevenueChart"]))).reduce((acc, curr) => {
      acc[curr.month - 1] += curr.sum;
      return acc;
    }, Array.from({ length: 12 }).fill(0));
    
    const profitChartData = (@Html.Raw(Json.Serialize(ViewData["RevenueChart"]))).reduce((acc, curr) => {
      if (curr.isDistributor) {
        acc[0][curr.month - 1] += curr.sum;
      } else {
        acc[1][curr.month - 1] += curr.sum;
      }
      return acc;
    }, [Array.from({ length: 12 }).fill(0), Array.from({ length: 12 }).fill(0)]);

    class DashboardDefault {
      static init() {
        new Chart(
          document.getElementById('revenue-chart').getContext('2d'),
          {
            type: 'line',
            data: {
              labels: ['T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10', 'T11', 'T12'],
              datasets: [
                {
                  label: 'Doanh thu',
                  backgroundColor: themeColors.transparent,
                  borderColor: themeColors.blue,
                  pointBackgroundColor: themeColors.blue,
                  pointBorderColor: themeColors.white,
                  pointHoverBackgroundColor: themeColors.blueLight,
                  pointHoverBorderColor: themeColors.blueLight,
                  data: revenueChartData
                },
              ],
            },
            options: {
              legend: {
                display: false,
              },
              maintainAspectRatio: false,
              responsive: true,
              hover: {
                mode: 'nearest',
                intersect: true,
              },
              tooltips: {
                mode: 'index',
                callbacks: {
                  label: function(tooltipItem) {
                    return Number(tooltipItem.yLabel)
                      .toFixed(0)
                      .replace(/./g, (c, i, a) => i > 0 && c !== "." && (a.length - i) % 3 === 0 ? "," + c : c);
                  }
                }
              },
              scales: {
                xAxes: [
                  {
                    gridLines: [
                      {
                        display: false,
                      },
                    ],
                    ticks: {
                      display: true,
                      fontColor: themeColors.grayLight,
                      fontSize: 13,
                      padding: 10,
                    },
                  },
                ],
                yAxes: [
                  {
                    gridLines: {
                      drawBorder: false,
                      drawTicks: false,
                      borderDash: [3, 4],
                      zeroLineWidth: 1,
                      zeroLineBorderDash: [3, 4],
                    },
                    ticks: {
                      display: true,
                      fontColor: themeColors.grayLight,
                      fontSize: 13,
                      padding: 10,
                      callback: function(value) {
                        if (parseInt(value) >= 1000){
                          return value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        } else {
                          return value;
                        }
                      }
                    },
                  },
                ],
              },
            },
          }
        );
  
        new Chart(
          document.getElementById('avg-profit-chart').getContext('2d'),
          {
            type: 'bar',
            data: {
              labels: ['T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10', 'T11', 'T12'],
              datasets: [
                {
                  label: 'Đối tác',
                  backgroundColor: themeColors.blue,
                  borderWidth: 0,
                  data: profitChartData[0],
                },
                {
                  label: 'Khách hàng',
                  backgroundColor: themeColors.blueLight,
                  borderWidth: 0,
                  data: profitChartData[1],
                },
              ],
            },
            options: {
              legend: {
                display: false,
              },
              scaleShowVerticalLines: false,
              responsive: true,
              maintainAspectRatio: false,
              tooltips: {
                mode: 'index',
                callbacks: {
                  label: function(tooltipItem) {
                    return Number(tooltipItem.yLabel)
                      .toFixed(0)
                      .replace(/./g, (c, i, a) => i > 0 && c !== "." && (a.length - i) % 3 === 0 ? "," + c : c);
                  }
                }
              },
              scales: {
                xAxes: [
                  {
                    categoryPercentage: 0.35,
                    barPercentage: 0.3,
                    display: true,
                    stacked: true,
                    scaleLabel: {
                      display: false,
                      labelString: 'Month',
                    },
                    gridLines: false,
                    ticks: {
                      display: true,
                      beginAtZero: true,
                      fontSize: 13,
                      padding: 10,
                    },
                  },
                ],
                yAxes: [
                  {
                    categoryPercentage: 0.35,
                    barPercentage: 0.3,
                    display: true,
                    stacked: true,
                    scaleLabel: {
                      display: false,
                      labelString: 'Value',
                    },
                    gridLines: {
                      drawBorder: false,
                      offsetGridLines: false,
                      drawTicks: false,
                      borderDash: [3, 4],
                      zeroLineWidth: 1,
                      zeroLineBorderDash: [3, 4],
                    },
                    ticks: {
                      display: true,
                      beginAtZero: true,
                      fontSize: 13,
                      padding: 10,
                      callback: function(value) {
                        if (parseInt(value) >= 1000){
                          return value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        } else {
                          return value;
                        }
                      }
                    },
                  },
                ],
              },
            },
          }
        );
      }
    }
  
    $(() => {
      DashboardDefault.init();
    });
  </script>
}